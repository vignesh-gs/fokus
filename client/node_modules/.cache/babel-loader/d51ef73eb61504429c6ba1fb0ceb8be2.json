{"ast":null,"code":"var _jsxFileName = \"/Users/vigneshgs/fokus/src/components/FocusBoard/FocussedTask.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { toggleIsRunning, tick, updateTaskTimeByVal, resetTaskTimer, toggleSoundscapeState, toggleIsCompleted, resetFocussedTask, rearrange } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport useTimer from \"../../hooks/useTimer\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { ResetIcon } from \"./../../components/customIcons\";\nimport dingSound from \"./../../sounds/ding.mp3\";\nimport { BsFillPauseFill, BsFillPlayFill } from \"react-icons/bs\";\nimport { FaClipboardCheck } from \"react-icons/fa\";\nimport { formattedTimeStringv2, updatePageTitle } from \"./../../helpers\";\nimport { MIN_TO_MS } from \"../../helpers/constants\";\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dingSoundElement = new Audio(dingSound);\nconst FocussedTaskDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    position: relative;\n    background-color: #fabb18;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n`;\n_c = FocussedTaskDiv;\nconst FocussedTaskPlayer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 55%;\n    /* background-color: red; */\n`;\n_c2 = FocussedTaskPlayer;\nconst FocussedTaskContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    padding: 5px;\n    height: 30%;\n    width: 90%;\n    max-width: 376px;\n    border-radius: 10px;\n    border: 3px solid black;\n    word-wrap: break-word;\n    background-color: ${p => p.theme.backgroundSecondary};\n    color: ${p => p.theme.primaryText};\n    text-shadow: 0 0 4px rgb(248, 185, 23, 0.4);\n    p {\n        min-width: 0;\n        font-weight: bold;\n        font-size: 0.9em;\n        margin: 3px;\n    }\n    position: relative;\n    /* -webkit-box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8);\n    box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8); */\n`;\n_c3 = FocussedTaskContent;\nconst TotalTaskTimeBadge = styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    border-radius: 3px;\n    p {\n        font-size: 0.7em;\n        color: ${p => p.theme.secondaryText};\n        margin: 3px 5px;\n    }\n    background-color: #fabb18;\n    position: absolute;\n    top: 3px;\n    right: 3px;\n    opacity: 0.6;\n    &:hover {\n        opacity: 1;\n    }\n`;\n_c4 = TotalTaskTimeBadge;\nconst FocussedTaskTimer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n    width: 50%;\n    /* background-color: #df1aa1; */\n`;\n_c5 = FocussedTaskTimer;\nconst CountdownTimerDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    background-color: ${p => p.theme.type === \"l\" ? \"#FFF\" : \"#FFE39E\"};\n    color: #000;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    border-radius: 50%;\n    font-weight: bold;\n    p {\n        margin: 0;\n        font-size: 0.9em;\n    }\n    span {\n        margin: 0 2px;\n        font-size: 0.7em;\n    }\n`;\n_c6 = CountdownTimerDiv;\nconst FocussedTaskController = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 90%;\n    width: 30%;\n    /* background-color: #f1f7dd; */\n`;\n_c7 = FocussedTaskController;\nconst PlayPauseButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background-color: #000;\n    border-radius: 50%;\n    margin: 10px 20px;\n    svg {\n        color: #fabb18;\n        font-size: 1.5em;\n        margin-left: ${p => p.isPlayBtn ? \"3px\" : \"0\"};\n    }\n    cursor: pointer;\n`;\n_c8 = PlayPauseButtonDiv;\nconst TaskCompletedDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 45px;\n    height: 45px;\n    margin: 10px 20px;\n    svg {\n        color: ${p => p.theme.secondaryText};\n        font-size: 2em;\n    }\n`;\n_c9 = TaskCompletedDiv;\nconst UpdateTimeButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 25px;\n    height: 25px;\n    cursor: ${p => p.isDisabled ? \"default\" : \"pointer\"};\n    color: ${p => p.isDisabled ? \"#777672\" : \"#000\"};\n`;\n_c10 = UpdateTimeButtonDiv;\nconst ResetButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    top: 7px;\n    left: 7px;\n    cursor: pointer;\n    background-color: #000;\n    svg {\n        color: #fabb18;\n        width: 20px;\n    }\n`;\n_c11 = ResetButtonDiv;\nexport function FocussedTask() {\n  _s();\n  const focussedTaskIndex = useSelector(state => state.tasks.meta.focussedTaskIndex);\n  const autoCompleteZeroTimeTask = useSelector(s => s.settings.autoCompleteZeroTimeTask);\n  let focussedTask = useSelector(state => focussedTaskIndex !== -1 ? state.tasks.taskArray[focussedTaskIndex] : null);\n  const dispatch = useDispatch();\n  const delay = 1010; // to account for the delay in executing code.\n  useTimer(deltaMS => {\n    if (focussedTask === null) return;else if (focussedTask.remainingTime > 0) {\n      dispatch(tick({\n        focussedTaskIndex,\n        deltaMS\n      }));\n    } else if (focussedTask.remainingTime === 0) {\n      dingSoundElement.play();\n      if (document.hidden) updatePageTitle(`Fokus: TIMER UP!!!`);\n      dispatch(toggleSoundscapeState(false));\n      dispatch(toggleIsRunning({\n        idx: focussedTaskIndex\n      }));\n      if (autoCompleteZeroTimeTask) {\n        dispatch(resetFocussedTask());\n        dispatch(toggleIsCompleted(focussedTask.id));\n        dispatch(rearrange({\n          id: focussedTask.id,\n          markedAsComplete: true\n        }));\n      }\n    }\n  }, focussedTask !== null && focussedTask.isRunning ? delay : null);\n  function updateTaskTimeHandler(val) {\n    if (focussedTask.time + val * MIN_TO_MS < 0) return;\n    if (focussedTask.time + val * MIN_TO_MS > 120 * MIN_TO_MS) return;\n    if (focussedTask.isRunning) dispatch(toggleIsRunning({\n      idx: focussedTaskIndex\n    }));\n    dispatch(updateTaskTimeByVal({\n      focussedTaskIndex,\n      val\n    }));\n    dispatch(toggleSoundscapeState(false));\n  }\n  function playPauseHandler(focussedTaskIndex, wasTaskRunning) {\n    dispatch(toggleIsRunning({\n      idx: focussedTaskIndex\n    }));\n    if (wasTaskRunning) {\n      updatePageTitle(\"Fokus\");\n      dispatch(toggleSoundscapeState(false));\n    } else {\n      updatePageTitle(`Fokus: ${focussedTask.content}`);\n      dispatch(toggleSoundscapeState(true));\n    }\n  }\n  const countdownObj = formattedTimeStringv2(focussedTask.remainingTime);\n  let countdownMins = countdownObj.mins;\n  let countdownSecs = countdownObj.secs;\n  const totalTaskTimeObj = formattedTimeStringv2(focussedTask.time);\n  let totalTaskMins = totalTaskTimeObj.mins;\n  return /*#__PURE__*/_jsxDEV(FocussedTaskDiv, {\n    children: [/*#__PURE__*/_jsxDEV(FocussedTaskPlayer, {\n      children: [/*#__PURE__*/_jsxDEV(FocussedTaskTimer, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 100,\n            height: 100\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n            value: focussedTask.time !== 0 ? Math.floor(focussedTask.remainingTime / focussedTask.time * 100) : 0,\n            styles: buildStyles({\n              strokeLinecap: \"butt\",\n              pathColor: \"#121212\",\n              trailColor: \"#F0F8FF\"\n            }),\n            strokeWidth: 9,\n            children: /*#__PURE__*/_jsxDEV(CountdownTimerDiv, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: countdownMins\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: countdownSecs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FocussedTaskController, {\n        children: [/*#__PURE__*/_jsxDEV(UpdateTimeButtonDiv, {\n          isDisabled: focussedTask.time + 5 * MIN_TO_MS > 120 * MIN_TO_MS,\n          onClick: () => updateTaskTimeHandler(5),\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"+5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), focussedTask.remainingTime !== 0 ? /*#__PURE__*/_jsxDEV(PlayPauseButtonDiv, {\n          isPlayBtn: !focussedTask.isRunning,\n          onClick: () => playPauseHandler(focussedTaskIndex, focussedTask.isRunning),\n          children: focussedTask.isRunning ? /*#__PURE__*/_jsxDEV(BsFillPauseFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 55\n          }, this) : /*#__PURE__*/_jsxDEV(BsFillPlayFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(TaskCompletedDiv, {\n          \"data-tip\": \"\",\n          \"data-for\": \"taskCompleted\",\n          children: [/*#__PURE__*/_jsxDEV(FaClipboardCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n            id: \"taskCompleted\",\n            getContent: () => \"Task Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(UpdateTimeButtonDiv, {\n          isDisabled: focussedTask.time - 5 * MIN_TO_MS < 0,\n          onClick: () => updateTaskTimeHandler(-5),\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResetButtonDiv, {\n        onClick: () => {\n          dispatch(toggleSoundscapeState(false));\n          dispatch(resetTaskTimer(focussedTaskIndex));\n        },\n        \"data-for\": \"reset\",\n        \"data-tip\": \"\",\n        children: [/*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          id: \"reset\",\n          getContent: () => \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FocussedTaskContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: focussedTask.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TotalTaskTimeBadge, {\n        \"data-tip\": \"\",\n        \"data-for\": \"totalTimeBadge\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalTaskMins, \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          id: \"totalTimeBadge\",\n          getContent: () => \"Task's total time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 9\n  }, this);\n}\n_s(FocussedTask, \"LojZqmWhA1wWid1cLuyp0DeoBWE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useTimer];\n});\n_c12 = FocussedTask;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"FocussedTaskDiv\");\n$RefreshReg$(_c2, \"FocussedTaskPlayer\");\n$RefreshReg$(_c3, \"FocussedTaskContent\");\n$RefreshReg$(_c4, \"TotalTaskTimeBadge\");\n$RefreshReg$(_c5, \"FocussedTaskTimer\");\n$RefreshReg$(_c6, \"CountdownTimerDiv\");\n$RefreshReg$(_c7, \"FocussedTaskController\");\n$RefreshReg$(_c8, \"PlayPauseButtonDiv\");\n$RefreshReg$(_c9, \"TaskCompletedDiv\");\n$RefreshReg$(_c10, \"UpdateTimeButtonDiv\");\n$RefreshReg$(_c11, \"ResetButtonDiv\");\n$RefreshReg$(_c12, \"FocussedTask\");","map":{"version":3,"names":["React","useSelector","useDispatch","styled","toggleIsRunning","tick","updateTaskTimeByVal","resetTaskTimer","toggleSoundscapeState","toggleIsCompleted","resetFocussedTask","rearrange","useTimer","CircularProgressbarWithChildren","buildStyles","ResetIcon","dingSound","BsFillPauseFill","BsFillPlayFill","FaClipboardCheck","formattedTimeStringv2","updatePageTitle","MIN_TO_MS","ReactTooltip","jsxDEV","_jsxDEV","dingSoundElement","Audio","FocussedTaskDiv","div","_c","FocussedTaskPlayer","_c2","FocussedTaskContent","p","theme","backgroundSecondary","primaryText","_c3","TotalTaskTimeBadge","secondaryText","_c4","FocussedTaskTimer","_c5","CountdownTimerDiv","type","_c6","FocussedTaskController","_c7","PlayPauseButtonDiv","isPlayBtn","_c8","TaskCompletedDiv","_c9","UpdateTimeButtonDiv","isDisabled","_c10","ResetButtonDiv","_c11","FocussedTask","_s","focussedTaskIndex","state","tasks","meta","autoCompleteZeroTimeTask","s","settings","focussedTask","taskArray","dispatch","delay","deltaMS","remainingTime","play","document","hidden","idx","id","markedAsComplete","isRunning","updateTaskTimeHandler","val","time","playPauseHandler","wasTaskRunning","content","countdownObj","countdownMins","mins","countdownSecs","secs","totalTaskTimeObj","totalTaskMins","children","style","width","height","value","Math","floor","styles","strokeLinecap","pathColor","trailColor","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","onClick","getContent","_c12","$RefreshReg$"],"sources":["/Users/vigneshgs/fokus/src/components/FocusBoard/FocussedTask.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n    toggleIsRunning,\n    tick,\n    updateTaskTimeByVal,\n    resetTaskTimer,\n    toggleSoundscapeState,\n    toggleIsCompleted,\n    resetFocussedTask,\n    rearrange,\n} from \"./../../containers/taskBoard/taskBoardSlice\";\nimport useTimer from \"../../hooks/useTimer\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { ResetIcon } from \"./../../components/customIcons\";\nimport dingSound from \"./../../sounds/ding.mp3\";\nimport { BsFillPauseFill, BsFillPlayFill } from \"react-icons/bs\";\nimport { FaClipboardCheck } from \"react-icons/fa\";\nimport { formattedTimeStringv2, updatePageTitle } from \"./../../helpers\";\nimport { MIN_TO_MS } from \"../../helpers/constants\";\nimport ReactTooltip from \"react-tooltip\";\n\nlet dingSoundElement = new Audio(dingSound);\n\nconst FocussedTaskDiv = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    position: relative;\n    background-color: #fabb18;\n    width: 100%;\n    height: 100%;\n    border-radius: 20px;\n`;\n\nconst FocussedTaskPlayer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 55%;\n    /* background-color: red; */\n`;\n\nconst FocussedTaskContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    padding: 5px;\n    height: 30%;\n    width: 90%;\n    max-width: 376px;\n    border-radius: 10px;\n    border: 3px solid black;\n    word-wrap: break-word;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    text-shadow: 0 0 4px rgb(248, 185, 23, 0.4);\n    p {\n        min-width: 0;\n        font-weight: bold;\n        font-size: 0.9em;\n        margin: 3px;\n    }\n    position: relative;\n    /* -webkit-box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8);\n    box-shadow: 0 1px 8px rgb(248, 185, 23, 0.8); */\n`;\n\nconst TotalTaskTimeBadge = styled.div`\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    border-radius: 3px;\n    p {\n        font-size: 0.7em;\n        color: ${(p) => p.theme.secondaryText};\n        margin: 3px 5px;\n    }\n    background-color: #fabb18;\n    position: absolute;\n    top: 3px;\n    right: 3px;\n    opacity: 0.6;\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nconst FocussedTaskTimer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n    width: 50%;\n    /* background-color: #df1aa1; */\n`;\n\nconst CountdownTimerDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 85%;\n    height: 85%;\n    background-color: ${(p) => (p.theme.type === \"l\" ? \"#FFF\" : \"#FFE39E\")};\n    color: #000;\n    -webkit-box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    box-shadow: 0 2px 10px rgba(166, 173, 201, 0.2);\n    border-radius: 50%;\n    font-weight: bold;\n    p {\n        margin: 0;\n        font-size: 0.9em;\n    }\n    span {\n        margin: 0 2px;\n        font-size: 0.7em;\n    }\n`;\n\nconst FocussedTaskController = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 90%;\n    width: 30%;\n    /* background-color: #f1f7dd; */\n`;\n\nconst PlayPauseButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background-color: #000;\n    border-radius: 50%;\n    margin: 10px 20px;\n    svg {\n        color: #fabb18;\n        font-size: 1.5em;\n        margin-left: ${(p) => (p.isPlayBtn ? \"3px\" : \"0\")};\n    }\n    cursor: pointer;\n`;\n\nconst TaskCompletedDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 45px;\n    height: 45px;\n    margin: 10px 20px;\n    svg {\n        color: ${(p) => p.theme.secondaryText};\n        font-size: 2em;\n    }\n`;\n\nconst UpdateTimeButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 25px;\n    height: 25px;\n    cursor: ${(p) => (p.isDisabled ? \"default\" : \"pointer\")};\n    color: ${(p) => (p.isDisabled ? \"#777672\" : \"#000\")};\n`;\n\nconst ResetButtonDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    top: 7px;\n    left: 7px;\n    cursor: pointer;\n    background-color: #000;\n    svg {\n        color: #fabb18;\n        width: 20px;\n    }\n`;\n\nexport function FocussedTask() {\n    const focussedTaskIndex = useSelector((state) => state.tasks.meta.focussedTaskIndex);\n    const autoCompleteZeroTimeTask = useSelector((s) => s.settings.autoCompleteZeroTimeTask);\n    let focussedTask = useSelector((state) => (focussedTaskIndex !== -1 ? state.tasks.taskArray[focussedTaskIndex] : null));\n    const dispatch = useDispatch();\n    const delay = 1010; // to account for the delay in executing code.\n    useTimer(\n        (deltaMS) => {\n            if (focussedTask === null) return;\n            else if (focussedTask.remainingTime > 0) {\n                dispatch(tick({ focussedTaskIndex, deltaMS }));\n            } else if (focussedTask.remainingTime === 0) {\n                dingSoundElement.play();\n                if(document.hidden) updatePageTitle(`Fokus: TIMER UP!!!`);\n                dispatch(toggleSoundscapeState(false));\n                dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                if (autoCompleteZeroTimeTask) {\n                    dispatch(resetFocussedTask());\n                    dispatch(toggleIsCompleted(focussedTask.id));\n                    dispatch(rearrange({ id: focussedTask.id, markedAsComplete: true }));\n                }\n            }\n        },\n        focussedTask !== null && focussedTask.isRunning ? delay : null\n    );\n\n    function updateTaskTimeHandler(val) {\n        if (focussedTask.time + val * MIN_TO_MS < 0) return;\n        if (focussedTask.time + val * MIN_TO_MS > 120 * MIN_TO_MS) return;\n        if (focussedTask.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        dispatch(updateTaskTimeByVal({ focussedTaskIndex, val }));\n        dispatch(toggleSoundscapeState(false));\n    }\n\n    function playPauseHandler(focussedTaskIndex, wasTaskRunning) {\n        dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n        if (wasTaskRunning) {\n            updatePageTitle(\"Fokus\");\n            dispatch(toggleSoundscapeState(false));\n        } else {\n            updatePageTitle(`Fokus: ${focussedTask.content}`);\n            dispatch(toggleSoundscapeState(true));\n        }\n    }\n\n    const countdownObj = formattedTimeStringv2(focussedTask.remainingTime);\n    let countdownMins = countdownObj.mins;\n    let countdownSecs = countdownObj.secs;\n\n    const totalTaskTimeObj = formattedTimeStringv2(focussedTask.time);\n    let totalTaskMins = totalTaskTimeObj.mins;\n\n    return (\n        <FocussedTaskDiv>\n            <FocussedTaskPlayer>\n                <FocussedTaskTimer>\n                    <div style={{ width: 100, height: 100 }}>\n                        <CircularProgressbarWithChildren\n                            value={focussedTask.time !== 0 ? Math.floor((focussedTask.remainingTime / focussedTask.time) * 100) : 0}\n                            styles={buildStyles({\n                                strokeLinecap: \"butt\",\n                                pathColor: \"#121212\",\n                                trailColor: \"#F0F8FF\",\n                            })}\n                            strokeWidth={9}\n                        >\n                            <CountdownTimerDiv>\n                                <p>{countdownMins}</p>\n                                <span>m</span>\n                                <p>{countdownSecs}</p>\n                                <span>s</span>\n                            </CountdownTimerDiv>\n                        </CircularProgressbarWithChildren>\n                    </div>\n                </FocussedTaskTimer>\n\n                <FocussedTaskController>\n                    <UpdateTimeButtonDiv isDisabled={focussedTask.time + 5 * MIN_TO_MS > 120 * MIN_TO_MS} onClick={() => updateTaskTimeHandler(5)}>\n                        <h4>+5</h4>\n                    </UpdateTimeButtonDiv>\n\n                    {focussedTask.remainingTime !== 0 ? (\n                        <PlayPauseButtonDiv isPlayBtn={!focussedTask.isRunning} onClick={() => playPauseHandler(focussedTaskIndex, focussedTask.isRunning)}>\n                            {focussedTask.isRunning ? <BsFillPauseFill /> : <BsFillPlayFill />}\n                        </PlayPauseButtonDiv>\n                    ) : (\n                        <TaskCompletedDiv data-tip=\"\" data-for=\"taskCompleted\">\n                            <FaClipboardCheck />\n                            <ReactTooltip id=\"taskCompleted\" getContent={() => \"Task Completed\"} />\n                        </TaskCompletedDiv>\n                    )}\n\n                    <UpdateTimeButtonDiv isDisabled={focussedTask.time - 5 * MIN_TO_MS < 0} onClick={() => updateTaskTimeHandler(-5)}>\n                        <h4>-5</h4>\n                    </UpdateTimeButtonDiv>\n                </FocussedTaskController>\n\n                <ResetButtonDiv\n                    onClick={() => {\n                        dispatch(toggleSoundscapeState(false));\n                        dispatch(resetTaskTimer(focussedTaskIndex));\n                    }}\n                    data-for=\"reset\"\n                    data-tip=\"\"\n                >\n                    <ResetIcon />\n                    <ReactTooltip id=\"reset\" getContent={() => \"Reset\"} />\n                </ResetButtonDiv>\n            </FocussedTaskPlayer>\n            <FocussedTaskContent>\n                <p>{focussedTask.content}</p>\n                <TotalTaskTimeBadge data-tip=\"\" data-for=\"totalTimeBadge\">\n                    <p>{totalTaskMins}m</p>\n                    <ReactTooltip id=\"totalTimeBadge\" getContent={() => \"Task's total time\"} />\n                </TotalTaskTimeBadge>\n            </FocussedTaskContent>\n        </FocussedTaskDiv>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}