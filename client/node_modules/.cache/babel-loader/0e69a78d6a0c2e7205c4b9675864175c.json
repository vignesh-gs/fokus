{"ast":null,"code":"var _jsxFileName = \"/Users/vigneshgs/fokus/src/components/MusicBox/MusicVolumeControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Slider from \"react-input-slider\";\nimport { updateSoundscapeVolume } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { debounce } from \"./../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MusicVolumeControl(_ref) {\n  _s();\n  let {\n    isDisabled\n  } = _ref;\n  const ssVolume = useSelector(s => s.tasks.soundscape.volume);\n  const dispatch = useDispatch();\n  const [volume, setVolume] = useState(ssVolume * 100);\n  const debouncedUpdateSoundscapeVolume = debounce(vol => {\n    dispatch(updateSoundscapeVolume(vol / 100));\n  }, 200);\n  function onVolumeChangeHandler(vol) {\n    setVolume(vol);\n    debouncedUpdateSoundscapeVolume(vol);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      axis: \"x\",\n      xstep: 5,\n      xmin: 0,\n      xmax: 100,\n      x: volume,\n      disabled: isDisabled,\n      onChange: _ref2 => {\n        let {\n          x\n        } = _ref2;\n        return onVolumeChangeHandler(x);\n      },\n      styles: {\n        track: {\n          backgroundColor: \"#c1c1d7\",\n          width: \"100%\",\n          cursor: \"pointer\"\n        },\n        active: {\n          backgroundColor: \"#FABB18\"\n        },\n        thumb: {\n          backgroundColor: \"#2F2F2F\"\n        },\n        disabled: {\n          opacity: 0.2\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MusicVolumeControl, \"l1e6eIuZK0J5JF4yYdhQQRfdP34=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = MusicVolumeControl;\nvar _c;\n$RefreshReg$(_c, \"MusicVolumeControl\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","Slider","updateSoundscapeVolume","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicVolumeControl","_ref","_s","isDisabled","ssVolume","s","tasks","soundscape","volume","dispatch","setVolume","debouncedUpdateSoundscapeVolume","vol","onVolumeChangeHandler","children","axis","xstep","xmin","xmax","x","disabled","onChange","_ref2","styles","track","backgroundColor","width","cursor","active","thumb","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vigneshgs/fokus/src/components/MusicBox/MusicVolumeControl.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Slider from \"react-input-slider\";\nimport { updateSoundscapeVolume } from \"./../../containers/taskBoard/taskBoardSlice\";\nimport { debounce } from \"./../../helpers\";\n\nexport function MusicVolumeControl({isDisabled}) {\n    const ssVolume = useSelector((s) => s.tasks.soundscape.volume);\n    const dispatch = useDispatch();\n    const [volume, setVolume] = useState(ssVolume * 100);\n\n    const debouncedUpdateSoundscapeVolume = debounce((vol) => {\n        dispatch(updateSoundscapeVolume(vol / 100));\n    }, 200);\n\n    function onVolumeChangeHandler(vol) {\n        setVolume(vol);\n        debouncedUpdateSoundscapeVolume(vol);\n    }\n\n    return (\n        <>\n            <Slider\n                axis=\"x\"\n                xstep={5}\n                xmin={0}\n                xmax={100}\n                x={volume}\n                disabled={isDisabled}\n                onChange={({ x }) => onVolumeChangeHandler(x)}\n                styles={{\n                    track: {\n                        backgroundColor: \"#c1c1d7\",\n                        width: \"100%\",\n                        cursor: \"pointer\",\n                    },\n                    active: {\n                        backgroundColor: \"#FABB18\",\n                    },\n                    thumb: {\n                        backgroundColor: \"#2F2F2F\",\n                    },\n                    disabled: {\n                        opacity: 0.2,\n                    },\n                }}\n            />\n        </>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,sBAAsB,QAAQ,6CAA6C;AACpF,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,OAAO,SAASC,kBAAkBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAU,CAAC,GAAAF,IAAA;EAC3C,MAAMG,QAAQ,GAAGb,WAAW,CAAEc,CAAC,IAAKA,CAAC,CAACC,KAAK,CAACC,UAAU,CAACC,MAAM,CAAC;EAC9D,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgB,MAAM,EAAEE,SAAS,CAAC,GAAGpB,QAAQ,CAACc,QAAQ,GAAG,GAAG,CAAC;EAEpD,MAAMO,+BAA+B,GAAGhB,QAAQ,CAAEiB,GAAG,IAAK;IACtDH,QAAQ,CAACf,sBAAsB,CAACkB,GAAG,GAAG,GAAG,CAAC,CAAC;EAC/C,CAAC,EAAE,GAAG,CAAC;EAEP,SAASC,qBAAqBA,CAACD,GAAG,EAAE;IAChCF,SAAS,CAACE,GAAG,CAAC;IACdD,+BAA+B,CAACC,GAAG,CAAC;EACxC;EAEA,oBACIf,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACIjB,OAAA,CAACJ,MAAM;MACHsB,IAAI,EAAC,GAAG;MACRC,KAAK,EAAE,CAAE;MACTC,IAAI,EAAE,CAAE;MACRC,IAAI,EAAE,GAAI;MACVC,CAAC,EAAEX,MAAO;MACVY,QAAQ,EAAEjB,UAAW;MACrBkB,QAAQ,EAAEC,KAAA;QAAA,IAAC;UAAEH;QAAE,CAAC,GAAAG,KAAA;QAAA,OAAKT,qBAAqB,CAACM,CAAC,CAAC;MAAA,CAAC;MAC9CI,MAAM,EAAE;QACJC,KAAK,EAAE;UACHC,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACZ,CAAC;QACDC,MAAM,EAAE;UACJH,eAAe,EAAE;QACrB,CAAC;QACDI,KAAK,EAAE;UACHJ,eAAe,EAAE;QACrB,CAAC;QACDL,QAAQ,EAAE;UACNU,OAAO,EAAE;QACb;MACJ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACJ,CAAC;AAEX;AAAChC,EAAA,CA3CeF,kBAAkB;EAAA,QACbT,WAAW,EACXC,WAAW;AAAA;AAAA2C,EAAA,GAFhBnC,kBAAkB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}