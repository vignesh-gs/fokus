{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\n\n// export function useTimerOldVersion(callback, delay) {\n//     const savedCallback = useRef();\n\n//     // Remember the latest callback.\n//     useEffect(() => {\n//         savedCallback.current = callback;\n//     }, [callback]);\n\n//     // Set up the interval.\n//     useEffect(() => {\n//         function tick() {\n//             savedCallback.current();\n//         }\n//         if (delay !== null) {\n//             let id = setInterval(tick, delay);\n//             return () => clearInterval(id);\n//         }\n//     }, [delay]);\n// }\n\nexport default function useTimer(callback, delay) {\n  _s();\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick(deltaMS) {\n      savedCallback.current(deltaMS);\n    }\n    if (delay !== null) {\n      let id = absoluteSetInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n_s(useTimer, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\nconst absoluteSetInterval = (handler, delay) => {\n  let baseTime = Date.now();\n  const callHandler = () => {\n    let timePassedSinceLastCall = Date.now() - baseTime;\n    if (timePassedSinceLastCall > 1000) {\n      baseTime = Date.now(); // must be set before calling handler to avoid time delay in executing it\n      handler(timePassedSinceLastCall);\n    }\n  };\n  return setInterval(callHandler, delay);\n};","map":{"version":3,"names":["useEffect","useRef","useTimer","callback","delay","_s","savedCallback","current","tick","deltaMS","id","absoluteSetInterval","clearInterval","handler","baseTime","Date","now","callHandler","timePassedSinceLastCall","setInterval"],"sources":["/Users/vigneshgs/fokus/src/hooks/useTimer.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// export function useTimerOldVersion(callback, delay) {\n//     const savedCallback = useRef();\n\n//     // Remember the latest callback.\n//     useEffect(() => {\n//         savedCallback.current = callback;\n//     }, [callback]);\n\n//     // Set up the interval.\n//     useEffect(() => {\n//         function tick() {\n//             savedCallback.current();\n//         }\n//         if (delay !== null) {\n//             let id = setInterval(tick, delay);\n//             return () => clearInterval(id);\n//         }\n//     }, [delay]);\n// }\n\nexport default function useTimer(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick(deltaMS) {\n            savedCallback.current(deltaMS);\n        }\n        if (delay !== null) {\n            let id = absoluteSetInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nconst absoluteSetInterval = (handler, delay) => {\n    let baseTime = Date.now();\n    const callHandler = () => {\n        let timePassedSinceLastCall = Date.now() - baseTime;\n        if (timePassedSinceLastCall > 1000) {\n            baseTime = Date.now(); // must be set before calling handler to avoid time delay in executing it\n            handler(timePassedSinceLastCall);\n        }\n    };\n    return setInterval(callHandler, delay);\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAAAC,EAAA;EAC9C,MAAMC,aAAa,GAAGL,MAAM,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACZM,aAAa,CAACC,OAAO,GAAGJ,QAAQ;EACpC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAH,SAAS,CAAC,MAAM;IACZ,SAASQ,IAAIA,CAACC,OAAO,EAAE;MACnBH,aAAa,CAACC,OAAO,CAACE,OAAO,CAAC;IAClC;IACA,IAAIL,KAAK,KAAK,IAAI,EAAE;MAChB,IAAIM,EAAE,GAAGC,mBAAmB,CAACH,IAAI,EAAEJ,KAAK,CAAC;MACzC,OAAO,MAAMQ,aAAa,CAACF,EAAE,CAAC;IAClC;EACJ,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;AACf;AAACC,EAAA,CAlBuBH,QAAQ;AAoBhC,MAAMS,mBAAmB,GAAGA,CAACE,OAAO,EAAET,KAAK,KAAK;EAC5C,IAAIU,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIC,uBAAuB,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,QAAQ;IACnD,IAAII,uBAAuB,GAAG,IAAI,EAAE;MAChCJ,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvBH,OAAO,CAACK,uBAAuB,CAAC;IACpC;EACJ,CAAC;EACD,OAAOC,WAAW,CAACF,WAAW,EAAEb,KAAK,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module"}