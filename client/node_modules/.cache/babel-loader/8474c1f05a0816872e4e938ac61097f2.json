{"ast":null,"code":"var _jsxFileName = \"/Users/vigneshgs/fokus/client/src/components/signup.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./aba.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = _ref => {\n  _s();\n  let {\n    onFormSwitch\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const history = useHistory();\n  const handleSignInClick = () => {\n    history.push(\"/\");\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    /*if (name === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert(\"Please fill in all the fields\");\r\n      return;\r\n    }\r\n      if (password !== confirmPassword) {\r\n      alert(\"The passwords do not match\");\r\n      return;\r\n    } */\n\n    try {\n      const response = await fetch(\"http://localhost:4000/register\", {\n        method: \"POST\",\n        crossDomain: true,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password,\n          confirmPassword: confirmPassword\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"then entered\");\n        console.log(data, \"userRegister\");\n      });\n      const data = await response.json();\n      console.log(\"data is \", data);\n      if (response.status && response.status >= 200 && response.status < 300) {\n        console.log(\"ifff entered\");\n        alert(\"Form submitted successfully\");\n      } else {\n        console.log(\"else entered\");\n        alert(`Failed to submit form: ${data.message}`);\n      }\n\n      //const data = await response.json();\n      //alert(\"Form submitted successfully\");\n    } catch (error) {\n      //alert(error.message);\n      console.log(\"main catch block entered\");\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Name\",\n        name: \"name\",\n        value: name,\n        onChange: event => setName(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        name: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signupbtn\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signup-link\",\n          onClick: handleSignInClick,\n          children: \"Already have an account? Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"OeTR/tLP9IGn/63sRJPo4WX3zFI=\", false, function () {\n  return [useHistory];\n});\n_c = Register;\nexport default Register;\n\n/* const Register = ({ onFormSwitch }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n \r\n    if (name === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert(\"Please fill in all the fields\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"The passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    // TODO: connect to backend to submit the form\r\n\r\n    alert(\"Form submitted successfully\");\r\n  };\r\n\r\n   const handleButtonClick = () => {\r\n    onFormSwitch('login');\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>test</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Sign Up</h1>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={(event) => setName(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)} \r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"psw-confirm\"\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\" className=\"signupbtn\">\r\n            Sign Up\r\n          </button>\r\n\r\n          <button\r\n            className=\"signup-link\"\r\n            onClick= {handleButtonClick}\r\n          >\r\n            Already have an account? Sign In\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}; \r\n\r\nexport default Register;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useHistory","jsxDEV","_jsxDEV","Register","_ref","_s","onFormSwitch","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","history","handleSignInClick","push","handleSubmit","event","preventDefault","response","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","then","res","json","data","console","log","status","alert","message","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/vigneshgs/fokus/client/src/components/signup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./aba.css\";\r\n\r\nconst Register = ({ onFormSwitch }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSignInClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    /*if (name === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert(\"Please fill in all the fields\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"The passwords do not match\");\r\n      return;\r\n    } */\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:4000/register\", {\r\n        method: \"POST\",\r\n        crossDomain: true,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n          confirmPassword: confirmPassword,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(\"then entered\");\r\n          console.log(data, \"userRegister\");\r\n        });\r\n\r\n      const data = await response.json();\r\n      console.log(\"data is \", data);\r\n      if (response.status && response.status >= 200 && response.status < 300) {\r\n        console.log(\"ifff entered\");\r\n        alert(\"Form submitted successfully\");\r\n      } else {\r\n        console.log(\"else entered\");\r\n        alert(`Failed to submit form: ${data.message}`);\r\n      }\r\n\r\n      //const data = await response.json();\r\n      //alert(\"Form submitted successfully\");\r\n    } catch (error) {\r\n      //alert(error.message);\r\n      console.log(\"main catch block entered\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n        <h1 className=\"heading\">Sign Up</h1>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={(event) => setName(event.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\" className=\"signupbtn\">\r\n            Sign Up\r\n          </button>\r\n\r\n          <button className=\"signup-link\" onClick={handleSignInClick}>\r\n            Already have an account? Sign In\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n/* const Register = ({ onFormSwitch }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n \r\n    if (name === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      alert(\"Please fill in all the fields\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"The passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    // TODO: connect to backend to submit the form\r\n\r\n    alert(\"Form submitted successfully\");\r\n  };\r\n\r\n   const handleButtonClick = () => {\r\n    onFormSwitch('login');\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>test</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Sign Up</h1>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={(event) => setName(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)} \r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"psw-confirm\"\r\n          value={confirmPassword}\r\n          onChange={(event) => setConfirmPassword(event.target.value)}\r\n          required\r\n        />\r\n\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\" className=\"signupbtn\">\r\n            Sign Up\r\n          </button>\r\n\r\n          <button\r\n            className=\"signup-link\"\r\n            onClick= {handleButtonClick}\r\n          >\r\n            Already have an account? Sign In\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}; \r\n\r\nexport default Register;\r\n\r\n*/\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMgB,OAAO,GAAGf,UAAU,CAAC,CAAC;EAE5B,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;EACnB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAGI,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,MAAM,EAAE,kBAAkB;UAC1B,6BAA6B,EAAE;QACjC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBtB,IAAI,EAAEA,IAAI;UACVE,KAAK,EAAEA,KAAK;UACZE,QAAQ,EAAEA,QAAQ;UAClBE,eAAe,EAAEA;QACnB,CAAC;MACH,CAAC,CAAC,CACCiB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BD,OAAO,CAACC,GAAG,CAACF,IAAI,EAAE,cAAc,CAAC;MACnC,CAAC,CAAC;MAEJ,MAAMA,IAAI,GAAG,MAAMZ,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;MAC7B,IAAIZ,QAAQ,CAACe,MAAM,IAAIf,QAAQ,CAACe,MAAM,IAAI,GAAG,IAAIf,QAAQ,CAACe,MAAM,GAAG,GAAG,EAAE;QACtEF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BE,KAAK,CAAC,6BAA6B,CAAC;MACtC,CAAC,MAAM;QACLH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BE,KAAK,CAAE,0BAAyBJ,IAAI,CAACK,OAAQ,EAAC,CAAC;MACjD;;MAEA;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCD,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBvC,OAAA;MAAMsC,SAAS,EAAC,aAAa;MAACE,QAAQ,EAAExB,YAAa;MAAAuB,QAAA,gBACnDvC,OAAA;QAAIsC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpC5C,OAAA;QACE6C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBzC,IAAI,EAAC,MAAM;QACX0C,KAAK,EAAE1C,IAAK;QACZ2C,QAAQ,EAAG/B,KAAK,IAAKX,OAAO,CAACW,KAAK,CAACgC,MAAM,CAACF,KAAK,CAAE;QACjDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF5C,OAAA;QACE6C,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,aAAa;QACzBzC,IAAI,EAAC,OAAO;QACZ0C,KAAK,EAAExC,KAAM;QACbyC,QAAQ,EAAG/B,KAAK,IAAKT,QAAQ,CAACS,KAAK,CAACgC,MAAM,CAACF,KAAK,CAAE;QAClDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEF5C,OAAA;QACE6C,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,gBAAgB;QAC5BzC,IAAI,EAAC,UAAU;QACf0C,KAAK,EAAEtC,QAAS;QAChBuC,QAAQ,EAAG/B,KAAK,IAAKP,WAAW,CAACO,KAAK,CAACgC,MAAM,CAACF,KAAK,CAAE;QACrDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEF5C,OAAA;QACE6C,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,kBAAkB;QAC9BzC,IAAI,EAAC,iBAAiB;QACtB0C,KAAK,EAAEpC,eAAgB;QACvBqC,QAAQ,EAAG/B,KAAK,IAAKL,kBAAkB,CAACK,KAAK,CAACgC,MAAM,CAACF,KAAK,CAAE;QAC5DG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEF5C,OAAA;QAAKsC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BvC,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAE5C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET5C,OAAA;UAAQsC,SAAS,EAAC,aAAa;UAACa,OAAO,EAAErC,iBAAkB;UAAAyB,QAAA,EAAC;QAE5D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzC,EAAA,CAtHIF,QAAQ;EAAA,QAMIH,UAAU;AAAA;AAAAsD,EAAA,GANtBnD,QAAQ;AAwHd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}