{"ast":null,"code":"var _jsxFileName = \"/Users/vigneshgs/fokus/src/components/notes/NotesListArea.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { NoteCard } from \"./../../components/notes/NoteCard\";\nimport { NewNoteButton } from \"./NewNoteButton\";\nimport NoteSearchInput from \"./NoteSearchInput\";\nimport emptyNotes from \"./../../images/emptyNotes.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesListAreaContainer = styled.div`\n    display: flex;\n    flex: 3 1 0;\n    flex-direction: column;\n    overflow-y: auto;\n    position: relative;\n    margin: 20px 0 0 30px;\n    background: ${p => `url(${p.background}) no-repeat center`};\n    background-size: 400px;\n`;\n_c = NotesListAreaContainer;\nconst NoteSearchDiv = styled.div`\n    display: flex;\n    width: 90%;\n    justify-content: ${p => p.isGridView ? \"flex-start\" : \"center\"};\n`;\n_c2 = NoteSearchDiv;\nconst NotesDiv = styled.div`\n    display: flex;\n    flex-direction: ${p => p.isGridView ? \"row\" : \"column\"};\n    flex-wrap: wrap;\n    align-items: center;\n    width: 90%;\n`;\n_c3 = NotesDiv;\nexport default function NotesListArea(_ref) {\n  _s();\n  let {\n    setNoteInPreview\n  } = _ref;\n  const notesArray = useSelector(state => state.notes.notesArray);\n  const isGridView = useSelector(state => state.settings.isGridView);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredNotes, setFilteredNotes] = useState([]);\n  useEffect(() => {\n    if (searchQuery.trim().length !== 0) {\n      setFilteredNotes(notesArray.filter(note => {\n        if (note.content.trim().length === 0) return true;else return note.content.toLowerCase().includes(searchQuery.toLowerCase().trim());\n      }));\n    } else {\n      setFilteredNotes(notesArray);\n    }\n  }, [searchQuery, notesArray]);\n  return /*#__PURE__*/_jsxDEV(NotesListAreaContainer, {\n    background: emptyNotes,\n    children: [/*#__PURE__*/_jsxDEV(NoteSearchDiv, {\n      isGridView: isGridView,\n      children: /*#__PURE__*/_jsxDEV(NoteSearchInput, {\n        isGridView: isGridView,\n        noSearchResults: notesArray.length !== 0 && filteredNotes.length === 0,\n        setSearchQuery: setSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesDiv, {\n      isGridView: isGridView,\n      children: [/*#__PURE__*/_jsxDEV(NewNoteButton, {\n        isGridView: isGridView,\n        setNoteInPreview: setNoteInPreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), filteredNotes.map((note, idx) => /*#__PURE__*/_jsxDEV(NoteCard, {\n        isGridView: isGridView,\n        setNoteInPreview: setNoteInPreview,\n        note: note\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(NotesListArea, \"uUV9+lSVqufjRafGoREBwcVF7CE=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c4 = NotesListArea;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"NotesListAreaContainer\");\n$RefreshReg$(_c2, \"NoteSearchDiv\");\n$RefreshReg$(_c3, \"NotesDiv\");\n$RefreshReg$(_c4, \"NotesListArea\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","styled","NoteCard","NewNoteButton","NoteSearchInput","emptyNotes","jsxDEV","_jsxDEV","NotesListAreaContainer","div","p","background","_c","NoteSearchDiv","isGridView","_c2","NotesDiv","_c3","NotesListArea","_ref","_s","setNoteInPreview","notesArray","state","notes","settings","searchQuery","setSearchQuery","filteredNotes","setFilteredNotes","trim","length","filter","note","content","toLowerCase","includes","children","noSearchResults","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","_c4","$RefreshReg$"],"sources":["/Users/vigneshgs/fokus/src/components/notes/NotesListArea.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { NoteCard } from \"./../../components/notes/NoteCard\";\nimport { NewNoteButton } from \"./NewNoteButton\";\nimport NoteSearchInput from \"./NoteSearchInput\";\nimport emptyNotes from \"./../../images/emptyNotes.svg\";\n\nconst NotesListAreaContainer = styled.div`\n    display: flex;\n    flex: 3 1 0;\n    flex-direction: column;\n    overflow-y: auto;\n    position: relative;\n    margin: 20px 0 0 30px;\n    background: ${(p) => `url(${p.background}) no-repeat center`};\n    background-size: 400px;\n`;\n\nconst NoteSearchDiv = styled.div`\n    display: flex;\n    width: 90%;\n    justify-content: ${(p) => (p.isGridView ? \"flex-start\" : \"center\")};\n`;\n\nconst NotesDiv = styled.div`\n    display: flex;\n    flex-direction: ${(p) => (p.isGridView ? \"row\" : \"column\")};\n    flex-wrap: wrap;\n    align-items: center;\n    width: 90%;\n`;\n\nexport default function NotesListArea({ setNoteInPreview }) {\n    const notesArray = useSelector((state) => state.notes.notesArray);\n    const isGridView = useSelector((state) => state.settings.isGridView);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [filteredNotes, setFilteredNotes] = useState([]);\n\n    useEffect(() => {\n        if (searchQuery.trim().length !== 0) {\n            setFilteredNotes(\n                notesArray.filter((note) => {\n                    if (note.content.trim().length === 0) return true;\n                    else return note.content.toLowerCase().includes(searchQuery.toLowerCase().trim());\n                })\n            );\n        } else {\n            setFilteredNotes(notesArray);\n        }\n    }, [searchQuery, notesArray]);\n\n    return (\n        <NotesListAreaContainer background={emptyNotes}>\n            <NoteSearchDiv isGridView={isGridView}>\n                <NoteSearchInput isGridView={isGridView} noSearchResults={notesArray.length !== 0 && filteredNotes.length === 0} setSearchQuery={setSearchQuery} />\n            </NoteSearchDiv>\n            <NotesDiv isGridView={isGridView}>\n                <NewNoteButton isGridView={isGridView} setNoteInPreview={setNoteInPreview} />\n                {filteredNotes.map((note, idx) => (\n                    <NoteCard isGridView={isGridView} key={idx} setNoteInPreview={setNoteInPreview} note={note} />\n                ))}\n            </NotesDiv>\n        </NotesListAreaContainer>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}