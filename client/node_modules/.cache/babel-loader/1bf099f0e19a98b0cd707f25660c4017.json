{"ast":null,"code":"export function formattedTimeString(x) {\n  x = Math.floor(x / 1000);\n  let secs = x % 60;\n  let mins = Math.floor(x / 60);\n  if (secs == 0) {\n    secs = `00`;\n  } else if (secs < 10) {\n    secs = `0${secs}`;\n  }\n  if (mins == 0) {\n    mins = `00`;\n  } else if (mins < 10) {\n    mins = `0${mins}`;\n  }\n  return `${mins}:${secs}`;\n}\nexport function formattedTimeStringv2(x) {\n  x = Math.floor(x / 1000);\n  let secs = x % 60;\n  let mins = Math.floor(x / 60);\n  if (secs == 0) {\n    secs = `00`;\n  } else if (secs < 10) {\n    secs = `0${secs}`;\n  }\n  if (mins == 0) {\n    mins = `00`;\n  } else if (mins < 10) {\n    mins = `0${mins}`;\n  }\n  return {\n    mins,\n    secs\n  };\n}\nexport function getFormattedDate() {\n  let d = new Date();\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  return {\n    day: days[d.getDay()],\n    month: months[d.getMonth()],\n    date: d.getDate(),\n    year: d.getFullYear()\n  };\n}\nexport function getFormattedListTimeSummary(x) {\n  x = Math.floor(x / 1000);\n  let mins = Math.floor(x % 3600 / 60);\n  let hours = Math.floor(x / 3600);\n  if (mins == 0) {\n    mins = `00`;\n  } else if (mins < 10) {\n    mins = `0${mins}`;\n  }\n  if (hours == 0) {\n    hours = `0`;\n  } else if (hours < 10) {\n    hours = `${hours}`;\n  }\n  return {\n    hours,\n    mins\n  };\n}\nexport function debounce(fn, wait) {\n  let t;\n  return function () {\n    clearTimeout(t);\n    t = setTimeout(() => fn.apply(this, arguments), wait);\n  };\n}\nexport function updatePageTitle(title) {\n  document.title = title;\n}\nexport function getOrdinalSuffix(i) {\n  let j = i % 10,\n    k = i % 100;\n  if (j == 1 && k != 11) {\n    return \"st\";\n  }\n  if (j == 2 && k != 12) {\n    return \"nd\";\n  }\n  if (j == 3 && k != 13) {\n    return \"rd\";\n  }\n  return \"th\";\n}\nconst MILLI_IN_30_DAYS = 2592000000;\nconst MILLI_IN_A_DAY = 86400000;\nconst MILLI_IN_A_HOUR = 3600000;\nconst MILLI_IN_A_MIN = 60000;\nexport function getTimeDifferenceForNotes(d1, d2) {\n  let difference = d2 - d1;\n  if (difference < MILLI_IN_A_HOUR) {\n    let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\n    return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\n  } else if (difference < MILLI_IN_A_DAY) {\n    let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\n    if (hoursGap <= 1) return `${hoursGap}hr ago`;else return `${hoursGap}hrs ago`;\n  } else if (difference < MILLI_IN_30_DAYS) {\n    let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\n    if (daysGap <= 1) return `${daysGap}day ago`;else return `${daysGap}days ago`;\n  } else {\n    return `30+days ago`;\n  }\n}","map":{"version":3,"names":["formattedTimeString","x","Math","floor","secs","mins","formattedTimeStringv2","getFormattedDate","d","Date","months","days","day","getDay","month","getMonth","date","getDate","year","getFullYear","getFormattedListTimeSummary","hours","debounce","fn","wait","t","clearTimeout","setTimeout","apply","arguments","updatePageTitle","title","document","getOrdinalSuffix","i","j","k","MILLI_IN_30_DAYS","MILLI_IN_A_DAY","MILLI_IN_A_HOUR","MILLI_IN_A_MIN","getTimeDifferenceForNotes","d1","d2","difference","minsGap","hoursGap","daysGap"],"sources":["/Users/vigneshgs/fokus/client/src/helpers/index.js"],"sourcesContent":["export function formattedTimeString(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return `${mins}:${secs}`;\n}\n\nexport function formattedTimeStringv2(x) {\n    x = Math.floor(x / 1000);\n    let secs = x % 60;\n    let mins = Math.floor(x / 60);\n\n    if (secs == 0) {\n        secs = `00`;\n    } else if (secs < 10) {\n        secs = `0${secs}`;\n    }\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n\n    return { mins, secs };\n}\n\nexport function getFormattedDate() {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return {\n        day: days[d.getDay()],\n        month: months[d.getMonth()],\n        date: d.getDate(),\n        year: d.getFullYear(),\n    };\n}\n\nexport function getFormattedListTimeSummary(x) {\n    x = Math.floor(x / 1000);\n    let mins = Math.floor((x % 3600) / 60);\n    let hours = Math.floor(x / 3600);\n\n    if (mins == 0) {\n        mins = `00`;\n    } else if (mins < 10) {\n        mins = `0${mins}`;\n    }\n    if (hours == 0) {\n        hours = `0`;\n    } else if (hours < 10) {\n        hours = `${hours}`;\n    }\n\n    return { hours, mins };\n}\n\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\n\nexport function updatePageTitle(title) {\n    document.title = title;\n}\n\nexport function getOrdinalSuffix(i) {\n    let j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return \"rd\";\n    }\n    return \"th\";\n}\n\nconst MILLI_IN_30_DAYS = 2592000000;\nconst MILLI_IN_A_DAY = 86400000;\nconst MILLI_IN_A_HOUR = 3600000;\nconst MILLI_IN_A_MIN = 60000;\n\nexport function getTimeDifferenceForNotes(d1, d2) {\n    let difference = d2 - d1;\n\n    if (difference < MILLI_IN_A_HOUR) {\n        let minsGap = Math.floor(difference / MILLI_IN_A_MIN);\n        return minsGap === 0 ? `recently` : `${minsGap}mins ago`;\n    } else if (difference < MILLI_IN_A_DAY) {\n        let hoursGap = Math.floor(difference / MILLI_IN_A_HOUR);\n        if (hoursGap <= 1) return `${hoursGap}hr ago`;\n        else return `${hoursGap}hrs ago`;\n    } else if (difference < MILLI_IN_30_DAYS) {\n        let daysGap = Math.floor(difference / MILLI_IN_A_DAY);\n        if (daysGap <= 1) return `${daysGap}day ago`;\n        else return `${daysGap}days ago`;\n    } else {\n        return `30+days ago`;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}