{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const colorOptions = {\n  pink: \"#FFF0F5\",\n  green: \"#D0F0C0\",\n  blue: \"#E0FFFF\",\n  white: \"#FFFFFF\"\n};\nexport const notesSlice = createSlice({\n  name: \"notes\",\n  initialState: {\n    notesArray: [],\n    meta: {\n      globalKey: 0,\n      totalNoteCount: 0\n    }\n  },\n  reducers: {\n    create: (notes, _ref) => {\n      let {\n        payload\n      } = _ref;\n      notes.meta.totalNoteCount++;\n      notes.meta.globalKey++;\n      notes.notesArray.unshift(payload);\n    },\n    update: (_ref2, _ref3) => {\n      let {\n        notesArray\n      } = _ref2;\n      let {\n        payload\n      } = _ref3;\n      notesArray.forEach(i => {\n        if (i.id === payload.id) {\n          i.content = payload.noteContent !== undefined ? payload.noteContent : i.content;\n          i.color = payload.noteColor !== undefined ? payload.noteColor : i.color;\n          i.updatedAt = new Date().toISOString();\n        }\n      });\n    },\n    remove: (notes, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      notes.notesArray = notes.notesArray.filter(i => {\n        if (i.id !== payload && i.content.trim().length !== 0) return true;else return false;\n      });\n      notes.meta.totalNoteCount = notes.notesArray.length;\n    }\n  }\n});\nexport const {\n  create,\n  update,\n  remove\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","colorOptions","pink","green","blue","white","notesSlice","name","initialState","notesArray","meta","globalKey","totalNoteCount","reducers","create","notes","_ref","payload","unshift","update","_ref2","_ref3","forEach","i","id","content","noteContent","undefined","color","noteColor","updatedAt","Date","toISOString","remove","_ref4","filter","trim","length","actions","reducer"],"sources":["/Users/vigneshgs/fokus/src/containers/notes/notesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const colorOptions = {\n    pink: \"#FFF0F5\",\n    green: \"#D0F0C0\",\n    blue: \"#E0FFFF\",\n    white: \"#FFFFFF\",\n};\n\nexport const notesSlice = createSlice({\n    name: \"notes\",\n    initialState: {\n        notesArray: [],\n        meta: {\n            globalKey: 0,\n            totalNoteCount: 0,\n        },\n    },\n    reducers: {\n        create: (notes, { payload }) => {\n            notes.meta.totalNoteCount++;\n            notes.meta.globalKey++;\n            notes.notesArray.unshift(payload);\n        },\n        update: ({ notesArray }, { payload }) => {\n            notesArray.forEach((i) => {\n                if (i.id === payload.id) {\n                    i.content = payload.noteContent !== undefined ? payload.noteContent : i.content;\n                    i.color = payload.noteColor !== undefined ? payload.noteColor : i.color;\n                    i.updatedAt = new Date().toISOString();\n                }\n            });\n        },\n        remove: (notes, { payload }) => {\n            notes.notesArray = notes.notesArray.filter((i) => {\n                if (i.id !== payload && i.content.trim().length !== 0) return true;\n                else return false;\n            });\n            notes.meta.totalNoteCount = notes.notesArray.length;\n        },\n    },\n});\n\nexport const { create, update, remove } = notesSlice.actions;\n\nexport default notesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAG;EACxBC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAClCO,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE;MACFC,SAAS,EAAE,CAAC;MACZC,cAAc,EAAE;IACpB;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,MAAM,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MACvBD,KAAK,CAACL,IAAI,CAACE,cAAc,EAAE;MAC3BG,KAAK,CAACL,IAAI,CAACC,SAAS,EAAE;MACtBI,KAAK,CAACN,UAAU,CAACS,OAAO,CAACD,OAAO,CAAC;IACrC,CAAC;IACDE,MAAM,EAAEA,CAAAC,KAAA,EAAAC,KAAA,KAAiC;MAAA,IAAhC;QAAEZ;MAAW,CAAC,GAAAW,KAAA;MAAA,IAAE;QAAEH;MAAQ,CAAC,GAAAI,KAAA;MAChCZ,UAAU,CAACa,OAAO,CAAEC,CAAC,IAAK;QACtB,IAAIA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,EAAE;UACrBD,CAAC,CAACE,OAAO,GAAGR,OAAO,CAACS,WAAW,KAAKC,SAAS,GAAGV,OAAO,CAACS,WAAW,GAAGH,CAAC,CAACE,OAAO;UAC/EF,CAAC,CAACK,KAAK,GAAGX,OAAO,CAACY,SAAS,KAAKF,SAAS,GAAGV,OAAO,CAACY,SAAS,GAAGN,CAAC,CAACK,KAAK;UACvEL,CAAC,CAACO,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC1C;MACJ,CAAC,CAAC;IACN,CAAC;IACDC,MAAM,EAAEA,CAAClB,KAAK,EAAAmB,KAAA,KAAkB;MAAA,IAAhB;QAAEjB;MAAQ,CAAC,GAAAiB,KAAA;MACvBnB,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACN,UAAU,CAAC0B,MAAM,CAAEZ,CAAC,IAAK;QAC9C,IAAIA,CAAC,CAACC,EAAE,KAAKP,OAAO,IAAIM,CAAC,CAACE,OAAO,CAACW,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,KAC9D,OAAO,KAAK;MACrB,CAAC,CAAC;MACFtB,KAAK,CAACL,IAAI,CAACE,cAAc,GAAGG,KAAK,CAACN,UAAU,CAAC4B,MAAM;IACvD;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEvB,MAAM;EAAEK,MAAM;EAAEc;AAAO,CAAC,GAAG3B,UAAU,CAACgC,OAAO;AAE5D,eAAehC,UAAU,CAACiC,OAAO"},"metadata":{},"sourceType":"module"}