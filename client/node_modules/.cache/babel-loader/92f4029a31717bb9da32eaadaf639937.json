{"ast":null,"code":"var _jsxFileName = \"/Users/vigneshgs/fokus/src/components/TaskBoard/TaskCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { remove, updateTaskContent, toggleIsCompleted, rearrange, updateTaskTime } from \"../../containers/taskBoard/taskBoardSlice\";\nimport { focusOnTask, resetFocussedTask, toggleIsRunning, updateTaskLabel, updateTaskObject, updateLabelCount, toggleSoundscapeState } from \"../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { DragIcon } from \"./../customIcons\";\nimport { formattedTimeString, updatePageTitle } from \"../../helpers\";\nimport bulb from \"./../../images/bulb.svg\";\nimport glowBulb from \"./../../images/glowBulb.svg\";\nimport tickmark from \"./../../images/tickmark.svg\";\nimport TaskLabelSelect from \"./../../components/TaskBoard/TaskLabelSelect\";\nimport { ONE_DAY } from \"./../../helpers/constants\";\nimport { BsExclamationCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 376px; // % not working here (maybe due to animation library wrappers)\n    height: 110px;\n    margin-top: 15px;\n    cursor: default !important;\n    /* background-color: #fff4e1; */\n`;\n_c = TaskCardContainer;\nconst TaskCardDragIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 5%;\n    height: 100%;\n    /* background-color: #ff09ac; */\n    svg {\n        cursor: url(\"https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur\"), default !important;\n        color: ${p => p.theme.primaryText};\n    }\n`;\n_c2 = TaskCardDragIcon;\nconst getTaskCardDivBorderLabelColor = labelColor => labelColor !== null ? `7px solid ${labelColor}` : \"none\";\nconst TaskCardDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    height: 100%;\n    width: 90%;\n    border-radius: 10px;\n    position: relative;\n    border-right: ${p => getTaskCardDivBorderLabelColor(p.labelColor)};\n    background-color: ${p => p.theme.backgroundSecondary};\n    -webkit-box-shadow: ${p => p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\"};\n    box-shadow: ${p => p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\"};\n`;\n_c3 = TaskCardDiv;\nconst OldTaskStatus = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    position: absolute;\n    top: 7px;\n    right: 7px;\n    color: #fabb18;\n    svg {\n        font-size: 0.9em;\n    }\n`;\n_c4 = OldTaskStatus;\nconst TaskStatusDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 15%;\n    /* background-color: #f8f8ff; */\n    position: relative;\n    color: ${p => p.theme.primaryText};\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.7em;\n        cursor: text;\n    }\n    img {\n        width: ${p => p.isCompleted ? \"40px\" : \"60px\"};\n    }\n`;\n_c5 = TaskStatusDiv;\nconst TaskDetailsDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 100%;\n    width: 75%;\n    /* margin: 0 0 0 10px; */\n    /* background-color: #fff1fc; */\n`;\n_c6 = TaskDetailsDiv;\nconst TaskContentDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 65%;\n    margin: 0 0 0 5px;\n    word-wrap: break-word;\n    color: ${p => p.theme.primaryText};\n    /* background-color: #fffcec; */\n    p {\n        font-size: 0.9em;\n        font-weight: bold;\n        min-width: 0;\n        cursor: text;\n    }\n`;\n_c7 = TaskContentDiv;\nconst TaskEditInput = styled.textarea`\n    resize: none;\n    height: 90%;\n    width: 100%;\n    font-size: 0.9em;\n    overflow: hidden;\n    vertical-align: center;\n    font-weight: bold;\n    background-color: ${p => p.theme.backgroundSecondary};\n    color: ${p => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${p => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 5px;\n    }\n`;\n_c8 = TaskEditInput;\nconst TimeEditInput = styled.input`\n    height: 15px;\n    width: 30px;\n    margin-top: 5px;\n    text-align: center;\n    font-weight: bold;\n    background-color: ${p => p.theme.backgroundSecondary};\n    color: ${p => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${p => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 2px;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n`;\n_c9 = TimeEditInput;\nconst TaskActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    color: ${p => p.theme.primaryText};\n    &:hover {\n        background-color: #fabb18;\n        p {\n            color: ${p => p.theme.secondaryText};\n        }\n    }\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n_c10 = TaskActionButton;\nconst TaskLabelContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    &:hover {\n        background-color: ${p => p.theme.type === \"l\" ? \"#f7f7fa\" : \"#121212\"};\n    }\n    p {\n        margin: 5px;\n        color: ${p => p.labelColor !== null ? p.labelColor : \"#c1c1d7\"};\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n_c11 = TaskLabelContainer;\nconst TaskDeleteButton = styled.div`\n    height: 80%;\n    cursor: pointer;\n    margin-left: auto;\n    color: #fabb18;\n    &:hover {\n        color: red;\n    }\n`;\n_c12 = TaskDeleteButton;\nconst TaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n    /* background-color: #fffa91; */\n    svg {\n        font-size: 0.8em;\n        margin: 5px;\n    }\n`;\n_c13 = TaskControllerDiv;\nconst OldTaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n`;\n_c14 = OldTaskControllerDiv;\nfunction previewTask(str) {\n  if (str.length <= 60) return str;else return str.substring(0, 60) + \"...\";\n}\nexport default function TaskCard(_ref) {\n  _s();\n  let {\n    task,\n    taskIndex,\n    focussedTaskGlobalKey,\n    forwardRBDProvided,\n    isFocussed,\n    focussedTaskIndex\n  } = _ref;\n  const dispatch = useDispatch();\n  const [taskUnderEdit, setTaskUnderEdit] = useState(false);\n  const [updatedTaskContent, setUpdatedTaskContent] = useState(task.content);\n  const [timeUnderEdit, setTimeUnderEdit] = useState(false);\n  const [updatedTime, setUpdatedTime] = useState(Math.floor(task.time / 1000 / 60));\n  const [labelUnderEdit, setLabelUnderEdit] = useState(false);\n  const [showDragIcon, setShowDragIcon] = useState(false);\n  const labels = useSelector(s => s.tasks.labels);\n  let isOldTask = false && !task.isCompleted && new Date() - new Date(task.createdAt) > ONE_DAY;\n  function submitUpdatedTaskContent(e) {\n    if (e.key === \"Enter\" && updatedTaskContent.trim().length >= 3) {\n      dispatch(updateTaskContent({\n        id: task.id,\n        updatedTaskContent\n      }));\n      setTaskUnderEdit(false);\n    }\n  }\n  function submitUpdatedTime(e) {\n    if (e.key === \"Enter\") {\n      dispatch(updateTaskTime({\n        id: task.id,\n        updatedTime\n      }));\n      setTimeUnderEdit(false);\n    }\n  }\n  function markTaskAsDoneHandler() {\n    if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n    if (task.isRunning) dispatch(toggleIsRunning({\n      idx: taskIndex\n    }));\n    if (isFocussed) {\n      updatePageTitle(\"Fokus\");\n      dispatch(resetFocussedTask());\n    }\n    dispatch(toggleIsCompleted(task.id));\n    dispatch(rearrange({\n      id: task.id,\n      markedAsComplete: true\n    }));\n    if (taskIndex === focussedTaskIndex) dispatch(toggleSoundscapeState(false));\n  }\n  function markTaskAsUndoneHandler() {\n    if (focussedTaskIndex !== -1 && focussedTaskGlobalKey < task.globalKey) {\n      dispatch(focusOnTask(focussedTaskIndex + 1));\n    }\n    dispatch(toggleIsCompleted(task.id));\n    dispatch(rearrange({\n      id: task.id,\n      markedAsComplete: false\n    }));\n  }\n  function recreateOldTask(task) {\n    let newTask = {\n      ...task\n    };\n    newTask.createdAt = new Date().toISOString();\n    newTask.isRunning = false;\n    newTask.isCompleted = false;\n    dispatch(updateTaskObject(newTask));\n  }\n  function labelSelectOnBlurHandler(taskId, taskLabel, updatedLabel) {\n    setLabelUnderEdit(false);\n    updatedLabel = updatedLabel === \"none\" ? null : updatedLabel;\n    dispatch(updateTaskLabel({\n      id: taskId,\n      label: updatedLabel\n    }));\n    if (taskLabel !== updatedLabel) dispatch(updateLabelCount({\n      oldLabel: taskLabel,\n      newLabel: updatedLabel\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(Flipped, {\n    flipId: `${task.id}`,\n    children: /*#__PURE__*/_jsxDEV(TaskCardContainer, {\n      ref: forwardRBDProvided.innerRef,\n      ...forwardRBDProvided.draggableProps,\n      ...forwardRBDProvided.dragHandleProps,\n      onMouseEnter: () => setShowDragIcon(!task.isCompleted && true),\n      onMouseLeave: () => setShowDragIcon(!task.isCompleted && false),\n      children: [/*#__PURE__*/_jsxDEV(TaskCardDragIcon, {\n        children: showDragIcon && /*#__PURE__*/_jsxDEV(DragIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskCardDiv, {\n        isFocussed: isFocussed,\n        labelColor: task.label !== null ? labels[task.label].color : null,\n        children: [isOldTask && /*#__PURE__*/_jsxDEV(OldTaskStatus, {\n          \"data-tip\": \"\",\n          \"data-for\": \"oldtask\",\n          children: [/*#__PURE__*/_jsxDEV(BsExclamationCircleFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n            id: \"oldtask\",\n            getContent: () => \"Task more than 24 hrs old\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TaskStatusDiv, {\n          isFocussed: isFocussed,\n          isCompleted: task.isCompleted,\n          children: [task.isCompleted ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tickmark,\n            alt: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this) : isFocussed ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: glowBulb,\n            alt: \"Focussed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bulb,\n            alt: \"Unfocussed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this), !task.isCompleted && (timeUnderEdit ? /*#__PURE__*/_jsxDEV(TimeEditInput, {\n            type: \"number\",\n            autoFocus: true,\n            value: updatedTime,\n            onBlur: () => {\n              dispatch(updateTaskTime({\n                id: task.id,\n                updatedTime\n              }));\n              setTimeUnderEdit(false);\n            },\n            onKeyDown: submitUpdatedTime,\n            onChange: e => setUpdatedTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            onDoubleClick: () => setTimeUnderEdit(true),\n            children: formattedTimeString(task.remainingTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskDetailsDiv, {\n          children: [/*#__PURE__*/_jsxDEV(TaskContentDiv, {\n            children: taskUnderEdit ? /*#__PURE__*/_jsxDEV(TaskEditInput, {\n              type: \"text\",\n              autoFocus: true,\n              value: updatedTaskContent,\n              onBlur: () => {\n                dispatch(updateTaskContent({\n                  id: task.id,\n                  updatedTaskContent\n                }));\n                setTaskUnderEdit(false);\n              },\n              onKeyDown: submitUpdatedTaskContent,\n              onChange: e => setUpdatedTaskContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              onDoubleClick: () => setTaskUnderEdit(true),\n              children: previewTask(task.content)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), isOldTask ? /*#__PURE__*/_jsxDEV(OldTaskControllerDiv, {\n            children: [/*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: e => {\n                recreateOldTask(task);\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: e => {\n                if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                dispatch(remove(task.id));\n                if (task.label !== null) dispatch(updateLabelCount({\n                  oldLabel: task.label,\n                  newLabel: null\n                }));\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(TaskControllerDiv, {\n            children: [!task.isCompleted && /*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: isFocussed ? () => {\n                if (task.isRunning) dispatch(toggleIsRunning({\n                  idx: focussedTaskIndex\n                }));\n                updatePageTitle(\"Fokus\");\n                dispatch(resetFocussedTask());\n                dispatch(toggleSoundscapeState(false));\n              } : () => {\n                if (focussedTaskIndex !== -1) dispatch(toggleIsRunning({\n                  idx: focussedTaskIndex,\n                  val: false\n                }));\n                dispatch(toggleSoundscapeState(false));\n                dispatch(focusOnTask(taskIndex));\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: isFocussed ? \"Unfocus\" : \"Focus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TaskActionButton, {\n              onClick: e => {\n                if (task.isCompleted) markTaskAsUndoneHandler();else markTaskAsDoneHandler();\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.isCompleted ? \"Undone\" : \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TaskLabelContainer, {\n              onClick: () => setLabelUnderEdit(true),\n              labelColor: task.label !== null ? labels[task.label].color : null,\n              children: labelUnderEdit ? /*#__PURE__*/_jsxDEV(TaskLabelSelect, {\n                onBlur: labelSelectOnBlurHandler,\n                taskId: task.id,\n                taskLabel: task.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 41\n              }, this) : task.label !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"#\", task.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Add label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this), !isFocussed && /*#__PURE__*/_jsxDEV(TaskDeleteButton, {\n              onClick: e => {\n                if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                dispatch(remove(task.id));\n                if (task.label !== null) dispatch(updateLabelCount({\n                  oldLabel: task.label,\n                  newLabel: null\n                }));\n                e.stopPropagation();\n              },\n              children: /*#__PURE__*/_jsxDEV(BsTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskCard, \"BzrkKYnoKrRggKtA8lhT/JWMnbw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c15 = TaskCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"TaskCardContainer\");\n$RefreshReg$(_c2, \"TaskCardDragIcon\");\n$RefreshReg$(_c3, \"TaskCardDiv\");\n$RefreshReg$(_c4, \"OldTaskStatus\");\n$RefreshReg$(_c5, \"TaskStatusDiv\");\n$RefreshReg$(_c6, \"TaskDetailsDiv\");\n$RefreshReg$(_c7, \"TaskContentDiv\");\n$RefreshReg$(_c8, \"TaskEditInput\");\n$RefreshReg$(_c9, \"TimeEditInput\");\n$RefreshReg$(_c10, \"TaskActionButton\");\n$RefreshReg$(_c11, \"TaskLabelContainer\");\n$RefreshReg$(_c12, \"TaskDeleteButton\");\n$RefreshReg$(_c13, \"TaskControllerDiv\");\n$RefreshReg$(_c14, \"OldTaskControllerDiv\");\n$RefreshReg$(_c15, \"TaskCard\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","remove","updateTaskContent","toggleIsCompleted","rearrange","updateTaskTime","focusOnTask","resetFocussedTask","toggleIsRunning","updateTaskLabel","updateTaskObject","updateLabelCount","toggleSoundscapeState","styled","BsTrash","Flipped","DragIcon","formattedTimeString","updatePageTitle","bulb","glowBulb","tickmark","TaskLabelSelect","ONE_DAY","BsExclamationCircleFill","ReactTooltip","jsxDEV","_jsxDEV","TaskCardContainer","div","_c","TaskCardDragIcon","p","theme","primaryText","_c2","getTaskCardDivBorderLabelColor","labelColor","TaskCardDiv","backgroundSecondary","isFocussed","_c3","OldTaskStatus","_c4","TaskStatusDiv","isCompleted","_c5","TaskDetailsDiv","_c6","TaskContentDiv","_c7","TaskEditInput","textarea","_c8","TimeEditInput","input","_c9","TaskActionButton","secondaryText","_c10","TaskLabelContainer","type","_c11","TaskDeleteButton","_c12","TaskControllerDiv","_c13","OldTaskControllerDiv","_c14","previewTask","str","length","substring","TaskCard","_ref","_s","task","taskIndex","focussedTaskGlobalKey","forwardRBDProvided","focussedTaskIndex","dispatch","taskUnderEdit","setTaskUnderEdit","updatedTaskContent","setUpdatedTaskContent","content","timeUnderEdit","setTimeUnderEdit","updatedTime","setUpdatedTime","Math","floor","time","labelUnderEdit","setLabelUnderEdit","showDragIcon","setShowDragIcon","labels","s","tasks","isOldTask","Date","createdAt","submitUpdatedTaskContent","e","key","trim","id","submitUpdatedTime","markTaskAsDoneHandler","isRunning","idx","markedAsComplete","markTaskAsUndoneHandler","globalKey","recreateOldTask","newTask","toISOString","labelSelectOnBlurHandler","taskId","taskLabel","updatedLabel","label","oldLabel","newLabel","flipId","children","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","color","getContent","src","alt","autoFocus","value","onBlur","onKeyDown","onChange","target","onDoubleClick","remainingTime","onClick","stopPropagation","val","_c15","$RefreshReg$"],"sources":["/Users/vigneshgs/fokus/src/components/TaskBoard/TaskCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { remove, updateTaskContent, toggleIsCompleted, rearrange, updateTaskTime } from \"../../containers/taskBoard/taskBoardSlice\";\nimport {\n    focusOnTask,\n    resetFocussedTask,\n    toggleIsRunning,\n    updateTaskLabel,\n    updateTaskObject,\n    updateLabelCount,\n    toggleSoundscapeState,\n} from \"../../containers/taskBoard/taskBoardSlice\";\nimport styled from \"styled-components\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { DragIcon } from \"./../customIcons\";\nimport { formattedTimeString , updatePageTitle} from \"../../helpers\";\nimport bulb from \"./../../images/bulb.svg\";\nimport glowBulb from \"./../../images/glowBulb.svg\";\nimport tickmark from \"./../../images/tickmark.svg\";\nimport TaskLabelSelect from \"./../../components/TaskBoard/TaskLabelSelect\";\nimport { ONE_DAY } from \"./../../helpers/constants\";\nimport { BsExclamationCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst TaskCardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 376px; // % not working here (maybe due to animation library wrappers)\n    height: 110px;\n    margin-top: 15px;\n    cursor: default !important;\n    /* background-color: #fff4e1; */\n`;\n\nconst TaskCardDragIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 5%;\n    height: 100%;\n    /* background-color: #ff09ac; */\n    svg {\n        cursor: url(\"https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur\"), default !important;\n        color: ${(p) => p.theme.primaryText};\n    }\n`;\n\nconst getTaskCardDivBorderLabelColor = (labelColor) => (labelColor !== null ? `7px solid ${labelColor}` : \"none\");\n\nconst TaskCardDiv = styled.div`\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    height: 100%;\n    width: 90%;\n    border-radius: 10px;\n    position: relative;\n    border-right: ${(p) => getTaskCardDivBorderLabelColor(p.labelColor)};\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    -webkit-box-shadow: ${(p) => (p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\")};\n    box-shadow: ${(p) => (p.isFocussed ? \"0 0 14px rgb(248,185,23,0.8)\" : \"0 2px 10px rgba(166,173,201,0.4)\")};\n`;\n\nconst OldTaskStatus = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    position: absolute;\n    top: 7px;\n    right: 7px;\n    color: #fabb18;\n    svg {\n        font-size: 0.9em;\n    }\n`;\n\nconst TaskStatusDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 15%;\n    /* background-color: #f8f8ff; */\n    position: relative;\n    color: ${(p) => p.theme.primaryText};\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.7em;\n        cursor: text;\n    }\n    img {\n        width: ${(p) => (p.isCompleted ? \"40px\" : \"60px\")};\n    }\n`;\n\nconst TaskDetailsDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 100%;\n    width: 75%;\n    /* margin: 0 0 0 10px; */\n    /* background-color: #fff1fc; */\n`;\n\nconst TaskContentDiv = styled.div`\n    display: flex;\n    align-items: center;\n    height: 65%;\n    margin: 0 0 0 5px;\n    word-wrap: break-word;\n    color: ${(p) => p.theme.primaryText};\n    /* background-color: #fffcec; */\n    p {\n        font-size: 0.9em;\n        font-weight: bold;\n        min-width: 0;\n        cursor: text;\n    }\n`;\n\nconst TaskEditInput = styled.textarea`\n    resize: none;\n    height: 90%;\n    width: 100%;\n    font-size: 0.9em;\n    overflow: hidden;\n    vertical-align: center;\n    font-weight: bold;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${(p) => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 5px;\n    }\n`;\n\nconst TimeEditInput = styled.input`\n    height: 15px;\n    width: 30px;\n    margin-top: 5px;\n    text-align: center;\n    font-weight: bold;\n    background-color: ${(p) => p.theme.backgroundSecondary};\n    color: ${(p) => p.theme.primaryText};\n    &:focus {\n        outline: none;\n        border: ${(p) => `2px ${p.theme.primaryText} dashed`};\n        border-radius: 2px;\n    }\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin: 0;\n    }\n`;\n\nconst TaskActionButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    color: ${(p) => p.theme.primaryText};\n    &:hover {\n        background-color: #fabb18;\n        p {\n            color: ${(p) => p.theme.secondaryText};\n        }\n    }\n    p {\n        margin: 5px;\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n\nconst TaskLabelContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 5px;\n    margin: 4px;\n    cursor: pointer;\n    &:hover {\n        background-color: ${(p) => (p.theme.type === \"l\" ? \"#f7f7fa\" : \"#121212\")};\n    }\n    p {\n        margin: 5px;\n        color: ${(p) => (p.labelColor !== null ? p.labelColor : \"#c1c1d7\")};\n        font-weight: bold;\n        font-size: 0.65em;\n    }\n`;\n\nconst TaskDeleteButton = styled.div`\n    height: 80%;\n    cursor: pointer;\n    margin-left: auto;\n    color: #fabb18;\n    &:hover {\n        color: red;\n    }\n`;\n\nconst TaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n    /* background-color: #fffa91; */\n    svg {\n        font-size: 0.8em;\n        margin: 5px;\n    }\n`;\n\nconst OldTaskControllerDiv = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 25%;\n`;\n\nfunction previewTask(str) {\n    if (str.length <= 60) return str;\n    else return str.substring(0, 60) + \"...\";\n}\n\nexport default function TaskCard({ task, taskIndex, focussedTaskGlobalKey, forwardRBDProvided, isFocussed, focussedTaskIndex }) {\n    const dispatch = useDispatch();\n\n    const [taskUnderEdit, setTaskUnderEdit] = useState(false);\n    const [updatedTaskContent, setUpdatedTaskContent] = useState(task.content);\n    const [timeUnderEdit, setTimeUnderEdit] = useState(false);\n    const [updatedTime, setUpdatedTime] = useState(Math.floor(task.time / 1000 / 60));\n    const [labelUnderEdit, setLabelUnderEdit] = useState(false);\n    const [showDragIcon, setShowDragIcon] = useState(false);\n\n    const labels = useSelector((s) => s.tasks.labels);\n\n    let isOldTask = false && !task.isCompleted && new Date() - new Date(task.createdAt) > ONE_DAY;\n\n    function submitUpdatedTaskContent(e) {\n        if (e.key === \"Enter\" && updatedTaskContent.trim().length >= 3) {\n            dispatch(updateTaskContent({ id: task.id, updatedTaskContent }));\n            setTaskUnderEdit(false);\n        }\n    }\n\n    function submitUpdatedTime(e) {\n        if (e.key === \"Enter\") {\n            dispatch(updateTaskTime({ id: task.id, updatedTime }));\n            setTimeUnderEdit(false);\n        }\n    }\n\n    function markTaskAsDoneHandler() {\n        if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n        if (task.isRunning) dispatch(toggleIsRunning({ idx: taskIndex }));\n        if (isFocussed) {\n            updatePageTitle(\"Fokus\");\n            dispatch(resetFocussedTask());\n        }\n        dispatch(toggleIsCompleted(task.id));\n        dispatch(rearrange({ id: task.id, markedAsComplete: true }));\n        if (taskIndex === focussedTaskIndex) dispatch(toggleSoundscapeState(false));\n    }\n\n    function markTaskAsUndoneHandler() {\n        if (focussedTaskIndex !== -1 && focussedTaskGlobalKey < task.globalKey) {\n            dispatch(focusOnTask(focussedTaskIndex + 1));\n        }\n        dispatch(toggleIsCompleted(task.id));\n        dispatch(rearrange({ id: task.id, markedAsComplete: false }));\n    }\n\n    function recreateOldTask(task) {\n        let newTask = { ...task };\n        newTask.createdAt = new Date().toISOString();\n        newTask.isRunning = false;\n        newTask.isCompleted = false;\n        dispatch(updateTaskObject(newTask));\n    }\n\n    function labelSelectOnBlurHandler(taskId, taskLabel, updatedLabel) {\n        setLabelUnderEdit(false);\n        updatedLabel = updatedLabel === \"none\" ? null : updatedLabel;\n        dispatch(updateTaskLabel({ id: taskId, label: updatedLabel }));\n        if (taskLabel !== updatedLabel) dispatch(updateLabelCount({ oldLabel: taskLabel, newLabel: updatedLabel }));\n    }\n\n    return (\n        <Flipped flipId={`${task.id}`}>\n            <TaskCardContainer\n                ref={forwardRBDProvided.innerRef}\n                {...forwardRBDProvided.draggableProps}\n                {...forwardRBDProvided.dragHandleProps}\n                onMouseEnter={() => setShowDragIcon(!task.isCompleted && true)}\n                onMouseLeave={() => setShowDragIcon(!task.isCompleted && false)}\n            >\n                <TaskCardDragIcon>{showDragIcon && <DragIcon />}</TaskCardDragIcon>\n\n                <TaskCardDiv isFocussed={isFocussed} labelColor={task.label !== null ? labels[task.label].color : null}>\n                    {isOldTask && (\n                        <OldTaskStatus data-tip=\"\" data-for=\"oldtask\">\n                            <BsExclamationCircleFill />\n                            <ReactTooltip id=\"oldtask\" getContent={() => \"Task more than 24 hrs old\"} />\n                        </OldTaskStatus>\n                    )}\n\n                    <TaskStatusDiv isFocussed={isFocussed} isCompleted={task.isCompleted}>\n                        {task.isCompleted ? (\n                            <img src={tickmark} alt=\"Done\" />\n                        ) : isFocussed ? (\n                            <img src={glowBulb} alt=\"Focussed\" />\n                        ) : (\n                            <img src={bulb} alt=\"Unfocussed\" />\n                        )}\n                        {!task.isCompleted &&\n                            (timeUnderEdit ? (\n                                <TimeEditInput\n                                    type=\"number\"\n                                    autoFocus\n                                    value={updatedTime}\n                                    onBlur={() => {\n                                        dispatch(updateTaskTime({ id: task.id, updatedTime }));\n                                        setTimeUnderEdit(false);\n                                    }}\n                                    onKeyDown={submitUpdatedTime}\n                                    onChange={(e) => setUpdatedTime(e.target.value)}\n                                />\n                            ) : (\n                                <p onDoubleClick={() => setTimeUnderEdit(true)}>{formattedTimeString(task.remainingTime)}</p>\n                            ))}\n                    </TaskStatusDiv>\n\n                    <TaskDetailsDiv>\n                        <TaskContentDiv>\n                            {taskUnderEdit ? (\n                                <TaskEditInput\n                                    type=\"text\"\n                                    autoFocus\n                                    value={updatedTaskContent}\n                                    onBlur={() => {\n                                        dispatch(updateTaskContent({ id: task.id, updatedTaskContent }));\n                                        setTaskUnderEdit(false);\n                                    }}\n                                    onKeyDown={submitUpdatedTaskContent}\n                                    onChange={(e) => setUpdatedTaskContent(e.target.value)}\n                                />\n                            ) : (\n                                <p onDoubleClick={() => setTaskUnderEdit(true)}>{previewTask(task.content)}</p>\n                            )}\n                        </TaskContentDiv>\n\n                        {isOldTask ? (\n                            <OldTaskControllerDiv>\n                                <TaskActionButton\n                                    onClick={(e) => {\n                                        recreateOldTask(task);\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <p>Create</p>\n                                </TaskActionButton>\n                                <TaskActionButton\n                                    onClick={(e) => {\n                                        if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                                        dispatch(remove(task.id));\n                                        if (task.label !== null) dispatch(updateLabelCount({ oldLabel: task.label, newLabel: null }));\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <p>Delete</p>\n                                </TaskActionButton>\n                            </OldTaskControllerDiv>\n                        ) : (\n                            <TaskControllerDiv>\n                                {!task.isCompleted && (\n                                    <TaskActionButton\n                                        onClick={\n                                            isFocussed\n                                                ? () => {\n                                                      if (task.isRunning) dispatch(toggleIsRunning({ idx: focussedTaskIndex }));\n                                                      updatePageTitle(\"Fokus\");\n                                                      dispatch(resetFocussedTask());\n                                                      dispatch(toggleSoundscapeState(false));\n                                                  }\n                                                : () => {\n                                                      if (focussedTaskIndex !== -1) dispatch(toggleIsRunning({ idx: focussedTaskIndex, val: false }));\n                                                      dispatch(toggleSoundscapeState(false));\n                                                      dispatch(focusOnTask(taskIndex));\n                                                  }\n                                        }\n                                    >\n                                        <p>{isFocussed ? \"Unfocus\" : \"Focus\"}</p>\n                                    </TaskActionButton>\n                                )}\n\n                                <TaskActionButton\n                                    onClick={(e) => {\n                                        if (task.isCompleted) markTaskAsUndoneHandler();\n                                        else markTaskAsDoneHandler();\n                                        e.stopPropagation();\n                                    }}\n                                >\n                                    <p>{task.isCompleted ? \"Undone\" : \"Done\"}</p>\n                                </TaskActionButton>\n\n                                <TaskLabelContainer onClick={() => setLabelUnderEdit(true)} labelColor={task.label !== null ? labels[task.label].color : null}>\n                                    {labelUnderEdit ? (\n                                        <TaskLabelSelect onBlur={labelSelectOnBlurHandler} taskId={task.id} taskLabel={task.label} />\n                                    ) : task.label !== null ? (\n                                        <p>#{task.label}</p>\n                                    ) : (\n                                        <p>Add label</p>\n                                    )}\n                                </TaskLabelContainer>\n\n                                {!isFocussed && (\n                                    <TaskDeleteButton\n                                        onClick={(e) => {\n                                            if (taskIndex < focussedTaskIndex) dispatch(focusOnTask(focussedTaskIndex - 1));\n                                            dispatch(remove(task.id));\n                                            if (task.label !== null) dispatch(updateLabelCount({ oldLabel: task.label, newLabel: null }));\n                                            e.stopPropagation();\n                                        }}\n                                    >\n                                        <BsTrash />\n                                    </TaskDeleteButton>\n                                )}\n                            </TaskControllerDiv>\n                        )}\n                    </TaskDetailsDiv>\n                </TaskCardDiv>\n            </TaskCardContainer>\n        </Flipped>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}